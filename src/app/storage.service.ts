import { Injectable } from '@angular/core';
import * as functions from 'firebase-functions';
import * as vision from '@google-cloud/vision';


/*
const visionClient = new vision.ImageAnnotatorClient();
let text;
const bucketName = 'businesscards-bd4e4.appspot.com'; // 'gs://businesscards-bd4e4.appspot.com'

const { Storage } = require('@google-cloud/storage');
const storage = new Storage();
*/


/*


const imageTagger = functions.storage.object().onFinalize(async (object, context) => {
  const filePath = object.name;
  const imageUri = `gs://${bucketName}/${filePath}`;

  const docId = filePath.split('.jpg')[0];
  //const docRef = admin.firestore().collection('photos').doc(docId);
  //return docRef.set({text, requiredEntities});
});

*/


@Injectable({
  providedIn: 'root'
})
export class StorageService {

  constructor() { }
}


//import * as admin from 'firebase-admin';


//  https://console.cloud.google.com/storage/browser/businesscards-bd4e4.appspot.com?project=495894257444


/*
uploadImg() {
// get a signedUrl:
// sign the generated bytes using the private key associated with the service account
// PUT request
// upload to destination bucket
const imageTagger = functions.storage.object().onFinalize(async (object, context) => {
  const filePath = object.name;
  const imageUri = `gs://${bucketName}/${filePath}`;
  const docId = filePath.split('.jpg')[0];
  //const docRef = admin.firestore().collection('photos').doc(docId);
  //return docRef.set({text, requiredEntities});
});
}
*/



/*
async function uploadFile() {
  // Uploads a local file to the bucket
  await storage.bucket(bucketName).upload(filename, {
    // Support for HTTP requests made with `Accept-Encoding: gzip`
    gzip: true,
    // By setting the option `destination`, you can change the name of the
    // object you are uploading to a bucket.
    metadata: {
      // Enable long-lived HTTP caching headers
      // Use only if the contents of the file will never change
      // (If the contents will change, use cacheControl: 'no-cache')
      cacheControl: 'public, max-age=31536000',
    },
  });
  console.log(`${filename} uploaded to ${bucketName}.`);
}
*/


